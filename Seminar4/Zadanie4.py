# 30. Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби. Известно, что при хранении данных используется принцип: одна строка — один пользователь. Написать код, загружающий данные из обоих файлов и формирующий из них словарь: ключи — ФИО, значения — данные о хобби.

# Сохранить словарь в файл users_hobby.txt. 

# Фрагмент файла с данными о пользователях (users.txt):
# Иванов Иван Иванович
# Петров Петр Петрович
# Фрагмент файла с данными о хобби (hobby.txt):
# скалолазание, охота
# горные лыжи

keys = open('python/users.txt').read().split('\n')
values = open('python/hobby.txt').read().split('\n')
info = dict(zip(keys, values))
print(info)

import json
open('python/users_hobby.txt', 'w').write(json.dumps(info))



# 31. Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

def fac(n):
    q = []
    d = 2
    while d * d <= n:
        if n % d == 0:
            q.append(d)
            n //= d
        else:
            d += 1
    if n > 1:
        q.append(n)
    return q
print(fac(int(input())))

# 32. Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.

lst = list(map(int, input("Введите числа через пробел:\n").split()))
print(f"Исходный список: {lst}")
new_lst = []
[new_lst.append(i) for i in lst if i not in new_lst]
print(f"Список из неповторяющихся элементов: {new_lst}")

# 33. Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена и записать в файл многочлен степени k.
# Пример:
# k=2 => 2x² + 4x + 5 = 0 или x² + 5 = 0 или 10x² = 0




# 34. *Даны два файла, в каждом из которых находится запись многочлена. Задача - сформировать файл, содержащий сумму многочленов.
# 2x² + 4x + 5 = 0 и x² + 5x + 3 = 0 => 3x² + 9x + 8 = 0 


